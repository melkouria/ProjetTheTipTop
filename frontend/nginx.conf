
worker_processes  1;
error_log  /var/log/nginx/error.log warn;
pid        /tmp/nginx.pid;
events {
  worker_connections  1024;
}
http {
  client_body_temp_path /tmp/client_temp;
  proxy_temp_path       /tmp/proxy_temp_path;
  fastcgi_temp_path     /tmp/fastcgi_temp;
  uwsgi_temp_path       /tmp/uwsgi_temp;
  scgi_temp_path        /tmp/scgi_temp;
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;
  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
  access_log  /var/log/nginx/access.log  main;
  sendfile        on;
  keepalive_timeout  65;

  gzip            on;
  gzip_static     on;
  gzip_vary       on;
  gzip_proxied    no-cache no-store private expired auth;
  gzip_min_length 10240;
  gzip_types
  application/javascript
  application/json
  font/woff2
  text/css
  text/plain;

  server {
    listen       4100;
    server_name  localhost;
     location / {
        root   /usr/share/nginx/html;
        try_files $uri $uri/ /index.html;
        index  index.html index.htm;
    }
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
      root   /usr/share/nginx/html;
    }
    location ~* (\.html|\/sw\.js)$ {
      root   /app;
      expires -1y;
      add_header Pragma "no-cache";
      add_header Cache-Control "public";
    }
 
      location @options {
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
        add_header 'Access-Control-Max-Age' 1728000;
        add_header 'Content-Type' 'text/plain; charset=utf-8';
        add_header 'Content-Length' 0;
        return 204;
    }
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|json)$ {
      root   /app;
      expires 1y;
      add_header Cache-Control "public, immutable";
    }
  }
}
